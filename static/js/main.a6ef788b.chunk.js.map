{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","App","props","state","onChange","bind","onSubmit","handleKeyPress","url","this","setState","isLoading","get","then","res","data","catch","error","e","api_url","target","value","a","totalData","parseInt","slice","length","test","getData","key","AppBar","position","Toolbar","Typography","variant","Card","className","TextField","label","type","onKeyPress","Button","color","onClick","error_message","TableContainer","component","Paper","Table","size","padding","stickyHeader","aria-label","TableHead","bg-color","TableRow","TableCell","TableBody","flight_number","mission_name","launch_year","rocket","rocket_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ef788b.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\n\nimport Button from '@material-ui/core/Button';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport './App.css';\nimport { Component } from 'react';\nimport { AppBar, IconButton, TextField, Toolbar, Typography, } from '@material-ui/core';\nconst axios = require('axios').default;\n/* eslint-disable no-unused-expressions */\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      \"api_url\" : `https://api.spacexdata.com/v3/launches/`,\n      \"url\" : `https://api.spacexdata.com/v3/launches/`,\n      \"isLoading\" : true,\n      \"error_message\" : \"\",\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n  }\n\n  getData(url){\n    this.setState( {isLoading: true})\n    axios.get(url)\n    // We get the API response and receive data in JSON format\n    .then(res => this.setState({data : res.data, isLoading: false}))\n     // ...then we update the users state\n    // Catch any errors we hit and update the app\n    .catch(error => this.setState({ error, isLoading: true }))\n    \n      \n\n    \n    \n    // Where we're fetching data from url\n    \n  }\n  \n  onChange(e){\n    this.setState(state => ({\"url\" : this.state.api_url + e.target.value}) );\n  }\n\n  async onSubmit(){\n\n    const totalData = await axios.get(this.state.api_url).then(res => res.data);\n    const entered = parseInt(this.state.url.slice(39));\n    /*alert(`totalData : ${totalData.length}\n    entered : ${entered}`);*/\n\n    if(entered > totalData.length - 1 || !(/\\/\\d+$/.test(this.state.url)) ){\n      this.setState(state => ({\"error_message\" : ` Entrez un entier entre 1 et ${totalData.length -1}`}));\n    }else{\n      this.getData(this.state.url); \n      this.setState(state => ({\"error_message\" : \"\"}));\n    }\n  \n \n    \n  }\n\n handleKeyPress(e){\n   if(e.key == \"Enter\"){\n     this.onSubmit();\n    } \n }\n\n\n\n\n  render() {\n\n    \n\n    return (\n      <div >\n\n\n        <AppBar position=\"static\">\n          <Toolbar>\n            \n            <Typography variant=\"h4\">\n            SpaceX Launches\n            </Typography>\n            \n          </Toolbar>\n        </AppBar>\n\n        <Card className=\"card\">\n        <h2>Enter a flight number from 1 to 110.</h2>\n        <div className=\"formInput\">\n          \n          <br/>\n          <TextField\n          className=\"textInput\"\n          variant=\"outlined\"\n            label=\"Type here\"\n            type=\"text\"\n            onChange={this.onChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          \n          <Button \n          className=\"button\"\n            variant=\"contained\" \n            color=\"primary\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            \n          >Submit</Button><span>{this.state.error_message}</span>\n        </div>\n        </Card>\n\n\n\n        < br/>\n\n        <TableContainer  className=\"tableContainer\" component={Paper}>\n\n        <Table size=\"medium\" padding=\"default\" stickyHeader aria-label=\"sticky table\">\n        <TableHead bg-color=\"primary\" >\n\n        <TableRow>\n            <TableCell >Entry</TableCell>\n            <TableCell> Data</TableCell>\n          </TableRow>\n\n        </TableHead>\n\n        <TableBody>\n        <TableRow>\n            <TableCell >Flight nÂ°</TableCell>\n            <TableCell> <span className=\"valuePending\">{!this.state.isLoading ? this.state.data.flight_number: ` pending...`}</span></TableCell>\n        </TableRow>\n\n        <TableRow>\n            <TableCell >Mission name</TableCell>\n            <TableCell> <span className=\"valuePending\">{!this.state.isLoading ? this.state.data.mission_name: ` pending...`}</span></TableCell>\n        </TableRow>\n\n        <TableRow>\n            <TableCell >Launch year</TableCell>\n            <TableCell> <span className=\"valuePending\">{!this.state.isLoading ? this.state.data.launch_year: ` pending...`}</span></TableCell>\n        </TableRow>\n\n        <TableRow>\n            <TableCell >Rocket ID</TableCell>\n            <TableCell> <span className=\"valuePending\">{!this.state.isLoading ? this.state.data.rocket.rocket_id: ` pending...`}</span></TableCell>\n        </TableRow>\n\n        </TableBody>\n\n\n\n\n        </Table>\n\n\n        </TableContainer>\n\n    \n    \n         \n     \n\n        \n        </div>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}